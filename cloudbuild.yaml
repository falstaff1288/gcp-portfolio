steps:
- id: 'tf init'
  name: 'hashicorp/terraform:1.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      terraform init -input=false -no-color
      terraform validate -no-color

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      # set -x
      if [ -n "$_BASE_BRANCH" ]; then
        echo "Base branch: $_BASE_BRANCH"
        case "$_BASE_BRANCH" in
          "dev")
            terraform workspace select dev
            terraform plan -out=/workspace/tfplan -input=false -no-color
          ;;
          "main")
            terraform workspace select prod
            terraform plan -out=/workspace/tfplan -input=false -no-color
          ;;
          *)
          ;;
        esac
      else
        echo "Branch name: $BRANCH_NAME"
        case "$BRANCH_NAME" in
          "main")
            terraform workspace select prod
            terraform plan -out=/workspace/tfplan -input=false -no-color
          ;;
          *)
            terraform workspace select dev
            terraform plan -out=/workspace/tfplan -input=false -no-color
          ;;
        esac
      fi
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      # set -x
      if [[ "$BRANCH_NAME" == dev ]]; then
          terraform workspace select dev
          terraform apply -input=false /workspace/tfplan -no-color
      elif [ "$BRANCH_NAME" == "main" ]; then
            terraform workspace select prod
            terraform apply -input=false /workspace/tfplan -no-color
      else
        echo "Branch is not main or dev. No action taken."
      fi